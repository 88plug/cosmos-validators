---
- name: Make sure the folder does not exist
  become: true
  file:
    state: absent
    path: '/home/ubuntu/{{ network }}'

- name: Clone node repo
  git:
    repo: '{{ repo }}'
    dest: '/home/ubuntu/{{ network }}'

- name: Install node
  command: '{{ item }}'
  become: true
  args:
    chdir: '/home/ubuntu/{{ network }}'
  with_items:
    - 'git fetch'
    - 'git checkout {{ node_version }}'
    - 'make install'
  environment:
    PATH: '{{ path }}'
    GOPATH: '/home/ubuntu/go'

- name: Initialize Node
  command: '{{ daemon }} init {{ validator_name }} --chain-id {{ chain_id }} -o'
  environment:
    PATH: '{{ path }}'
    DAEMON_HOME: '/home/ubuntu/.{{ daemon }}'

- name: Update config files
  lineinfile:
    path: '/home/ubuntu/.{{ network }}/config/app.toml'
    regexp: 'minimum-gas-prices '
    line: 'minimum-gas-prices = "{{ minimum_has_price }}"'
    state: present

- name: Update the config.toml file
  lineinfile:
    path: '/home/ubuntu/.{{ network }}/config/config.toml'
    regexp: 'persistent_peers = ""'
    line: 'persistent_peers = "{{ peers }}"'
    state: present

- name: Download genesis file
  get_url:
    url: '{{ genesis }}'
    dest: '/home/ubuntu/.{{ network }}/config/genesis.json'
    mode: '0644'

- name: register public ip
  uri:
    url: https://api.ipify.org?format=json
  register: public_ip

- name: Set up external address
  lineinfile:
    path: '/home/ubuntu/.{{ network }}/config/config.toml'
    regexp: 'external_address = ""'
    line: 'external_address = "{{ public_ip.json.ip }}:26656"'
    state: present

- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '/home/ubuntu/.{{ network }}/cosmovisor/genesis/bin'
    - '/home/ubuntu/.{{ network }}/cosmovisor/upgrades'

- name: copy
  copy:
    src: '/home/ubuntu/go/bin/{{ daemon }}'
    dest: '/home/ubuntu/.{{ network }}/cosmovisor/genesis/bin'
    remote_src: true
    mode: '0755'

- name: copy cosmovisor service file
  become: true
  copy:
    src: cosmovisor.service
    dest: /etc/systemd/system/cosmovisor.service
    owner: root
    group: root
    mode: '600'

- name: start cosmovisor service
  become: true
  systemd:
    name: cosmovisor
    state: restarted
    daemon_reload: yes
    enabled: yes
  changed_when: false
